{"filter":false,"title":"main.rs","tooltip":"/10_generics_and_traits/src/main.rs","undoManager":{"mark":57,"position":57,"stack":[[{"start":{"row":0,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["fn main() {","    println!(\"Hello, world!\");","}",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":12,"column":1},"action":"insert","lines":["fn main() {","    let number_list = vec![34, 50, 25, 100, 65];","","    let mut largest = number_list[0];","","    for number in number_list {","        if number > largest {","            largest = number;","        }","    }","","    println!(\"The largest number is {}\", largest);","}"]}],[{"start":{"row":12,"column":1},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":12,"column":1},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":14,"column":0},"end":{"row":24,"column":1},"action":"insert","lines":["fn largest(list: &[i32]) -> i32 {","    let mut largest = list[0];","","    for &item in list.iter() {","        if item > largest {","            largest = item;","        }","    }","","    largest","}"],"id":5}],[{"start":{"row":1,"column":5},"end":{"row":11,"column":50},"action":"remove","lines":["et number_list = vec![34, 50, 25, 100, 65];","","    let mut largest = number_list[0];","","    for number in number_list {","        if number > largest {","            largest = number;","        }","    }","","    println!(\"The largest number is {}\", largest);"],"id":6},{"start":{"row":1,"column":4},"end":{"row":1,"column":5},"action":"remove","lines":["l"]}],[{"start":{"row":1,"column":4},"end":{"row":9,"column":49},"action":"insert","lines":["let number_list = vec![34, 50, 25, 100, 65];","","    let result = largest(&number_list);","    println!(\"The largest number is {}\", result);","","    let number_list = vec![102, 34, 6000, 89, 54, 2, 43, 8];","","    let result = largest(&number_list);","    println!(\"The largest number is {}\", result);"],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["fn main() {","    let number_list = vec![34, 50, 25, 100, 65];","","    let result = largest(&number_list);","    println!(\"The largest number is {}\", result);","","    let number_list = vec![102, 34, 6000, 89, 54, 2, 43, 8];","","    let result = largest(&number_list);","    println!(\"The largest number is {}\", result);","}","","fn largest(list: &[i32]) -> i32 {","    let mut largest = list[0];","","    for &item in list.iter() {","        if item > largest {","            largest = item;","        }","    }","","    largest","}",""],"id":8},{"start":{"row":0,"column":0},"end":{"row":34,"column":1},"action":"insert","lines":["fn largest_i32(list: &[i32]) -> i32 {","    let mut largest = list[0];","","    for &item in list.iter() {","        if item > largest {","            largest = item;","        }","    }","","    largest","}","","fn largest_char(list: &[char]) -> char {","    let mut largest = list[0];","","    for &item in list.iter() {","        if item > largest {","            largest = item;","        }","    }","","    largest","}","","fn main() {","    let number_list = vec![34, 50, 25, 100, 65];","","    let result = largest_i32(&number_list);","    println!(\"The largest number is {}\", result);","","    let char_list = vec!['y', 'm', 'a', 'q'];","","    let result = largest_char(&char_list);","    println!(\"The largest char is {}\", result);","}"]}],[{"start":{"row":22,"column":1},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":23,"column":0},"end":{"row":31,"column":1},"action":"insert","lines":["struct Point<T> {","    x: T,","    y: T,","}","","fn main() {","    let integer = Point { x: 5, y: 10 };","    let float = Point { x: 1.0, y: 4.0 };","}"],"id":10}],[{"start":{"row":22,"column":1},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":11}],[{"start":{"row":43,"column":47},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":44,"column":0},"end":{"row":44,"column":4},"action":"insert","lines":["    "]},{"start":{"row":44,"column":4},"end":{"row":45,"column":0},"action":"insert","lines":["",""]},{"start":{"row":45,"column":0},"end":{"row":45,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":45,"column":4},"end":{"row":46,"column":41},"action":"insert","lines":["let integer = Point { x: 5, y: 10 };","    let float = Point { x: 1.0, y: 4.0 };"],"id":13}],[{"start":{"row":28,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["","fn main() {","    let integer = Point { x: 5, y: 10 };","    let float = Point { x: 1.0, y: 4.0 };","}",""],"id":14}],[{"start":{"row":27,"column":1},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":29,"column":0},"end":{"row":33,"column":1},"action":"insert","lines":["impl<T> Point<T> {","    fn x(&self) -> &T {","        &self.x","    }","}"],"id":16}],[{"start":{"row":47,"column":41},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":17},{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"insert","lines":["    "]},{"start":{"row":48,"column":4},"end":{"row":49,"column":0},"action":"insert","lines":["",""]},{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":49,"column":4},"end":{"row":51,"column":32},"action":"insert","lines":["let p = Point { x: 5, y: 10 };","","    println!(\"p.x = {}\", p.x());"],"id":18}],[{"start":{"row":52,"column":1},"end":{"row":53,"column":0},"action":"insert","lines":["",""],"id":19},{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["",""]},{"start":{"row":54,"column":0},"end":{"row":54,"column":1},"action":"insert","lines":["f"]},{"start":{"row":54,"column":1},"end":{"row":54,"column":2},"action":"insert","lines":["n"]}],[{"start":{"row":54,"column":2},"end":{"row":54,"column":3},"action":"insert","lines":[" "],"id":20},{"start":{"row":54,"column":3},"end":{"row":54,"column":4},"action":"insert","lines":["g"]},{"start":{"row":54,"column":4},"end":{"row":54,"column":5},"action":"insert","lines":["e"]},{"start":{"row":54,"column":5},"end":{"row":54,"column":6},"action":"insert","lines":["b"]},{"start":{"row":54,"column":6},"end":{"row":54,"column":7},"action":"insert","lines":["n"]},{"start":{"row":54,"column":7},"end":{"row":54,"column":8},"action":"insert","lines":["e"]},{"start":{"row":54,"column":8},"end":{"row":54,"column":9},"action":"insert","lines":["r"]},{"start":{"row":54,"column":9},"end":{"row":54,"column":10},"action":"insert","lines":["i"]},{"start":{"row":54,"column":10},"end":{"row":54,"column":11},"action":"insert","lines":["c"]},{"start":{"row":54,"column":11},"end":{"row":54,"column":12},"action":"insert","lines":["s"]}],[{"start":{"row":54,"column":11},"end":{"row":54,"column":12},"action":"remove","lines":["s"],"id":21},{"start":{"row":54,"column":10},"end":{"row":54,"column":11},"action":"remove","lines":["c"]},{"start":{"row":54,"column":9},"end":{"row":54,"column":10},"action":"remove","lines":["i"]},{"start":{"row":54,"column":8},"end":{"row":54,"column":9},"action":"remove","lines":["r"]},{"start":{"row":54,"column":7},"end":{"row":54,"column":8},"action":"remove","lines":["e"]},{"start":{"row":54,"column":6},"end":{"row":54,"column":7},"action":"remove","lines":["n"]},{"start":{"row":54,"column":5},"end":{"row":54,"column":6},"action":"remove","lines":["b"]}],[{"start":{"row":54,"column":5},"end":{"row":54,"column":6},"action":"insert","lines":["n"],"id":22},{"start":{"row":54,"column":6},"end":{"row":54,"column":7},"action":"insert","lines":["e"]},{"start":{"row":54,"column":7},"end":{"row":54,"column":8},"action":"insert","lines":["r"]},{"start":{"row":54,"column":8},"end":{"row":54,"column":9},"action":"insert","lines":["i"]},{"start":{"row":54,"column":9},"end":{"row":54,"column":10},"action":"insert","lines":["c"]},{"start":{"row":54,"column":10},"end":{"row":54,"column":11},"action":"insert","lines":["s"]},{"start":{"row":54,"column":11},"end":{"row":54,"column":12},"action":"insert","lines":["_"]},{"start":{"row":54,"column":12},"end":{"row":54,"column":13},"action":"insert","lines":["e"]},{"start":{"row":54,"column":13},"end":{"row":54,"column":14},"action":"insert","lines":["x"]},{"start":{"row":54,"column":14},"end":{"row":54,"column":15},"action":"insert","lines":["a"]},{"start":{"row":54,"column":15},"end":{"row":54,"column":16},"action":"insert","lines":["m"]},{"start":{"row":54,"column":16},"end":{"row":54,"column":17},"action":"insert","lines":["p"]},{"start":{"row":54,"column":17},"end":{"row":54,"column":18},"action":"insert","lines":["l"]},{"start":{"row":54,"column":18},"end":{"row":54,"column":19},"action":"insert","lines":["e"]}],[{"start":{"row":54,"column":19},"end":{"row":54,"column":20},"action":"insert","lines":["s"],"id":23}],[{"start":{"row":54,"column":20},"end":{"row":54,"column":22},"action":"insert","lines":["()"],"id":24}],[{"start":{"row":54,"column":22},"end":{"row":54,"column":23},"action":"insert","lines":[" "],"id":25},{"start":{"row":54,"column":23},"end":{"row":54,"column":24},"action":"insert","lines":["{"]}],[{"start":{"row":54,"column":24},"end":{"row":56,"column":1},"action":"insert","lines":["","    ","}"],"id":26}],[{"start":{"row":55,"column":4},"end":{"row":70,"column":32},"action":"insert","lines":["let number_list = vec![34, 50, 25, 100, 65];","","    let result = largest_i32(&number_list);","    println!(\"The largest number is {}\", result);","","    let char_list = vec!['y', 'm', 'a', 'q'];","","    let result = largest_char(&char_list);","    println!(\"The largest char is {}\", result);","    ","    let integer = Point { x: 5, y: 10 };","    let float = Point { x: 1.0, y: 4.0 };","    ","    let p = Point { x: 5, y: 10 };","","    println!(\"p.x = {}\", p.x());"],"id":27}],[{"start":{"row":54,"column":24},"end":{"row":55,"column":0},"action":"insert","lines":["",""],"id":28},{"start":{"row":55,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":1},"action":"remove","lines":["fn largest_i32(list: &[i32]) -> i32 {","    let mut largest = list[0];","","    for &item in list.iter() {","        if item > largest {","            largest = item;","        }","    }","","    largest","}","","fn largest_char(list: &[char]) -> char {","    let mut largest = list[0];","","    for &item in list.iter() {","        if item > largest {","            largest = item;","        }","    }","","    largest","}","","struct Point<T> {","    x: T,","    y: T,","}","","impl<T> Point<T> {","    fn x(&self) -> &T {","        &self.x","    }","}"],"id":29}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["",""],"id":30},{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"insert","lines":["    "],"id":31}],[{"start":{"row":20,"column":4},"end":{"row":53,"column":1},"action":"insert","lines":["fn largest_i32(list: &[i32]) -> i32 {","    let mut largest = list[0];","","    for &item in list.iter() {","        if item > largest {","            largest = item;","        }","    }","","    largest","}","","fn largest_char(list: &[char]) -> char {","    let mut largest = list[0];","","    for &item in list.iter() {","        if item > largest {","            largest = item;","        }","    }","","    largest","}","","struct Point<T> {","    x: T,","    y: T,","}","","impl<T> Point<T> {","    fn x(&self) -> &T {","        &self.x","    }","}"],"id":32}],[{"start":{"row":1,"column":4},"end":{"row":16,"column":32},"action":"remove","lines":["let number_list = vec![34, 50, 25, 100, 65];","","    let result = largest_i32(&number_list);","    println!(\"The largest number is {}\", result);","","    let char_list = vec!['y', 'm', 'a', 'q'];","","    let result = largest_char(&char_list);","    println!(\"The largest char is {}\", result);","    ","    let integer = Point { x: 5, y: 10 };","    let float = Point { x: 1.0, y: 4.0 };","    ","    let p = Point { x: 5, y: 10 };","","    println!(\"p.x = {}\", p.x());"],"id":33},{"start":{"row":1,"column":4},"end":{"row":1,"column":5},"action":"insert","lines":["g"]},{"start":{"row":1,"column":5},"end":{"row":1,"column":6},"action":"insert","lines":["e"]},{"start":{"row":1,"column":6},"end":{"row":1,"column":7},"action":"insert","lines":["n"]},{"start":{"row":1,"column":7},"end":{"row":1,"column":8},"action":"insert","lines":["e"]},{"start":{"row":1,"column":8},"end":{"row":1,"column":9},"action":"insert","lines":["r"]},{"start":{"row":1,"column":9},"end":{"row":1,"column":10},"action":"insert","lines":["e"]},{"start":{"row":1,"column":10},"end":{"row":1,"column":11},"action":"insert","lines":["i"]},{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"insert","lines":["c"]},{"start":{"row":1,"column":12},"end":{"row":1,"column":13},"action":"insert","lines":["s"]}],[{"start":{"row":1,"column":12},"end":{"row":1,"column":13},"action":"remove","lines":["s"],"id":34},{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"remove","lines":["c"]},{"start":{"row":1,"column":10},"end":{"row":1,"column":11},"action":"remove","lines":["i"]},{"start":{"row":1,"column":9},"end":{"row":1,"column":10},"action":"remove","lines":["e"]}],[{"start":{"row":1,"column":9},"end":{"row":1,"column":10},"action":"insert","lines":["i"],"id":35},{"start":{"row":1,"column":10},"end":{"row":1,"column":11},"action":"insert","lines":["c"]},{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"insert","lines":["s"]}],[{"start":{"row":1,"column":4},"end":{"row":1,"column":12},"action":"remove","lines":["generics"],"id":36},{"start":{"row":1,"column":4},"end":{"row":1,"column":21},"action":"insert","lines":["generics_examples"]}],[{"start":{"row":1,"column":21},"end":{"row":1,"column":23},"action":"insert","lines":["()"],"id":37}],[{"start":{"row":1,"column":23},"end":{"row":1,"column":24},"action":"insert","lines":[";"],"id":38}],[{"start":{"row":6,"column":4},"end":{"row":6,"column":8},"action":"insert","lines":["    "],"id":39}],[{"start":{"row":8,"column":4},"end":{"row":8,"column":8},"action":"insert","lines":["    "],"id":40}],[{"start":{"row":9,"column":8},"end":{"row":9,"column":12},"action":"insert","lines":["    "],"id":41}],[{"start":{"row":10,"column":12},"end":{"row":10,"column":16},"action":"insert","lines":["    "],"id":42}],[{"start":{"row":11,"column":8},"end":{"row":11,"column":12},"action":"insert","lines":["    "],"id":43}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":8},"action":"insert","lines":["    "],"id":44}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":8},"action":"insert","lines":["    "],"id":45}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "],"id":46}],[{"start":{"row":38,"column":0},"end":{"row":38,"column":4},"action":"insert","lines":["    "],"id":47},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"insert","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"insert","lines":["    "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":4},"action":"insert","lines":["    "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":4},"action":"insert","lines":["    "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"insert","lines":["    "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"insert","lines":["    "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"insert","lines":["    "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":1,"column":24},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":48},{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]},{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":["t"]},{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"insert","lines":["r"]},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["a"]},{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["i"]},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["t"]},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["s"]},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["_"]}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["e"],"id":49},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["x"]},{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["a"]},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["m"]},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["p"]},{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["l"]},{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"insert","lines":["e"]},{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":["s"]}],[{"start":{"row":2,"column":19},"end":{"row":2,"column":21},"action":"insert","lines":["()"],"id":50}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":[";"],"id":51}],[{"start":{"row":57,"column":1},"end":{"row":58,"column":0},"action":"insert","lines":["",""],"id":52},{"start":{"row":58,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["",""]},{"start":{"row":59,"column":0},"end":{"row":59,"column":1},"action":"insert","lines":["f"]},{"start":{"row":59,"column":1},"end":{"row":59,"column":2},"action":"insert","lines":["n"]}],[{"start":{"row":59,"column":2},"end":{"row":59,"column":3},"action":"insert","lines":[" "],"id":53},{"start":{"row":59,"column":3},"end":{"row":59,"column":4},"action":"insert","lines":["t"]},{"start":{"row":59,"column":4},"end":{"row":59,"column":5},"action":"insert","lines":["r"]},{"start":{"row":59,"column":5},"end":{"row":59,"column":6},"action":"insert","lines":["a"]},{"start":{"row":59,"column":6},"end":{"row":59,"column":7},"action":"insert","lines":["i"]},{"start":{"row":59,"column":7},"end":{"row":59,"column":8},"action":"insert","lines":["t"]}],[{"start":{"row":59,"column":3},"end":{"row":59,"column":8},"action":"remove","lines":["trait"],"id":54},{"start":{"row":59,"column":3},"end":{"row":59,"column":18},"action":"insert","lines":["traits_examples"]}],[{"start":{"row":59,"column":18},"end":{"row":59,"column":20},"action":"insert","lines":["()"],"id":55}],[{"start":{"row":59,"column":20},"end":{"row":59,"column":21},"action":"insert","lines":[" "],"id":56},{"start":{"row":59,"column":21},"end":{"row":59,"column":22},"action":"insert","lines":["{"]}],[{"start":{"row":59,"column":22},"end":{"row":61,"column":1},"action":"insert","lines":["","    ","}"],"id":57}],[{"start":{"row":59,"column":0},"end":{"row":61,"column":1},"action":"remove","lines":["fn traits_examples() {","    ","}"],"id":58},{"start":{"row":58,"column":0},"end":{"row":59,"column":0},"action":"remove","lines":["",""]},{"start":{"row":57,"column":1},"end":{"row":58,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":1,"column":24},"end":{"row":2,"column":22},"action":"remove","lines":["","    traits_examples();"],"id":59}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":1,"column":24},"end":{"row":1,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1562102007527,"hash":"481fc07a4931f0df27d4d21fd3cda8941a3c0781"}